#!/usr/bin/env python3

"""Runs the entire configuration"""

import os
import glob
from os import path
import argparse

SUDO_SCRIPT_DIRS = ['install', 'system']
USER_SCRIPT_DIRS = ['homedir', 'vim', 'hook']
SLOW_SCRIPTS = ['install', 'vim/50-ycm.sh']


def get_scripts(script_dirs, blacklist):
    """Gets a list of scripts from a directory, excluding blacklisted scripts"""
    config_dir = path.normpath(path.join(path.dirname(__file__), '..'))
    scripts = []
    for script_dir in script_dirs:
        for filename in glob.glob(path.join(config_dir, script_dir, '*')):
            if path.isfile(filename) and os.access(filename, os.X_OK):
                scripts.append(filename)

    if blacklist:
        for black in blacklist:
            scripts = [name for name in scripts if black not in name]

    return sorted(scripts, key=path.basename)


def get_args():
    """Gets the command line arguments for systemize"""
    parser = argparse.ArgumentParser()
    parser.description = 'Run each setup scripts in order'
    parser.add_argument('--list', '-l',
                        action='store_true', default=False,
                        help='List the setup scripts rather than run')
    parser.add_argument('--user-only', '-u',
                        action='store_true', default=False,
                        help='Only run user-level scripts')
    parser.add_argument('--fast-only', '-f',
                        action='store_true', default=False,
                        help='Skip all the slow stuff')
    return parser.parse_args()


def systemize(args):
    """Runs the systemize process"""
    blacklist = SLOW_SCRIPTS if args.fast_only else None
    if args.user_only:
        root_script_dirs = None
    else:
        root_scripts = get_scripts(SUDO_SCRIPT_DIRS, blacklist)
    user_scripts = get_scripts(USER_SCRIPT_DIRS, blacklist)

    if args.list:
        if root_scripts:
            for script in root_scripts:
                print('<root>', script)
        for script in user_scripts:
            print('<user>', script)
    else:
        if root_scripts:
            for script in root_scripts:
                os.system(script)
        for script in user_scripts:
            os.system(script)

if __name__ == '__main__':
    systemize(get_args())
