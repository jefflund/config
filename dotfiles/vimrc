" First, be iMproved
set nocompatible

" Load Vundle plugins
filetype off
set runtimepath+=~/.vim/bundle/vundle
call vundle#rc()
Bundle 'scrooloose/nerdtree'
Bundle 'majutsushi/tagbar'
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'garbas/vim-snipmate'
Bundle 'Valloric/YouCompleteMe'
Bundle 'tpope/vim-fugitive'
Bundle 'scrooloose/syntastic'
Bundle 'Blackrush/vim-gocode'
Bundle 'kien/ctrlp.vim'

" Turn on file type based options
syntax on
filetype on
filetype indent on
filetype plugin on
let g:tex_flavor="latex"

" Turn on a few more options
set title
set backspace=2
set scrolloff=2
set showcmd
set showmode
set guioptions=ace
set colorcolumn=81

" In memory buffers
set nobackup
set noswapfile
set hidden

" Switch up the colors
set t_Co=256
set t_ut=
colorscheme yendor

" Setup statusline
set laststatus=2
set statusline=%<
set statusline+=%t
set statusline+=\ %([%Y%R%H%W]%)
set statusline+=%m
set statusline+=%{fugitive#statusline()}
set statusline+=\ %{&spell?\"SPELL\ \":\"\"}
set statusline+=%{&paste?\"PASTE\":\"\"}
set statusline+=%=
set statusline+=%-14.(%l,%v%)
set statusline+=\ %P

" Setup cursorline
autocmd WinEnter * setlocal cursorline
autocmd BufEnter * setlocal cursorline
autocmd WinLeave * setlocal nocursorline
setlocal cursorline

" More sane split openings
set splitbelow
set splitright

" Set the leader keys
let mapleader=" "
let maplocalleader="-"

" Better whitespace
set list listchars=tab:»\ ,trail:·,nbsp:·
set expandtab
set textwidth=79
set tabstop=4
set softtabstop=4
set shiftwidth=4
set autoindent

" Handle trailing whitespace
nmap <silent> <leader><space> :call StripTrailingWhitespace()<cr>
function! StripTrailingWhitespace()
    let l=line(".")
    let c=col(".")
    execute '%s/\s\+$//e'
    call cursor(l, c)
endfunction

" Setup search
set hlsearch
set incsearch
set ignorecase
set smartcase
nmap <silent> <leader>/ :nohlsearch<cr>

" Set up NERDTree
autocmd VimEnter * if !argc() | NERDTree | endif
nmap <silent> <leader>n :NERDTreeToggle<cr>
let NERDTreeIgnore=[]
let NERDTreeIgnore+=['\.pyc$', '__pycache__']
let NERDTreeIgnore+=['\.o$', '\.d$']
let NERDTreeIgnore+=['\.aux$', '\.log$']
let NERDTreeIgnore+=['\.class$']
let NERDTreeQuitOnOpen=1
let NERDTreeChDirMode=2

" Set up CtrlP
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/]\.(git|hg|svn)$',
    \ 'file': '\v\.(pyc)$',
    \ }

" Set up Tagbar
nmap <silent> <leader>t :TagbarToggle<cr>
let g:tagbar_autoclose=1
let g:tagbar_left=1
let g:tagbar_sort=0
let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
\ }

" Set up YouCompleteMe
let g:ycm_autoclose_preview_window_after_insertion=1
let g:ycm_key_list_select_completion=[]
let g:ycm_key_list_previous_completion=[]

" Set up Syntastic
let g:syntastic_enable_signs=0

" Navigation shortcuts
nmap <leader>l <c-w>l
nmap <leader>h <c-w>h
nmap <leader>k <c-w>k
nmap <leader>j <c-w>j
nmap j gj
nmap k gk

" Other shortcuts
nmap <silent> <leader>s :set invspell<cr>
nmap <silent> <leader>v :set invpaste<cr>
nmap <silent> <leader>z :sh<cr>
nmap <silent> <leader>R :edit %<cr>
vmap < <gv
vmap > >gv
nmap <silent> <leader>Q :qa<cr>
nmap <silent> <leader>q :q<cr>
nmap <silent> <leader>w :w<cr>
nmap <silent> <leader>W :wa<cr>

" Disable Ex mode
map Q <nop>
